AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VMVPCId:
    Type: String
    Description: "Enter the VPC ID"

  VMPublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Enter the list of public subnet IDs"

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances

  SSHTunnelSSMParameterName:
    Type: String
    Description: "Name of the SSM parameter containing the jump-box private key"
    Default: "your parameter name"  

  MySQLUserSSMParameter:
    Type: String
    Description: "SSM parameter name for MySQL username"
    Default: "your parameter name"

  MySQLPasswordSSMParameter:
    Type: String
    Description: "SSM parameter name for MySQL password"
    Default: "your parameter name"

  MySQLDatabaseSSMParameter:
    Type: String
    Description: "SSM parameter name for MySQL database"
    Default: "your parameter name"

  MySQLHostSSMParameter:
    Type: String
    Description: "SSM parameter name for MySQL host"
    Default: "your parameter name"

  JumpBoxHostSSMParameter:
    Type: String
    Description: "SSM parameter name for jump box host"
    Default: "your parameter name"

 
Resources:
  VMSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTP, and HTTPS"
      VpcId: !Ref VMVPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  CFMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref CFMRole

  CFMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
      - PolicyName: DataProcessorCFMRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - ssm:GetParameter  
              Resource:
                - !Sub "arn:aws:ssm:*:*:parameter/${SSHTunnelSSMParameterName}"
                - !Sub "arn:aws:ssm:*:*:parameter/${MySQLUserSSMParameter}"
                - !Sub "arn:aws:ssm:*:*:parameter/${MySQLPasswordSSMParameter}"
                - !Sub "arn:aws:ssm:*:*:parameter/${MySQLDatabaseSSMParameter}"
                - !Sub "arn:aws:ssm:*:*:parameter/${MySQLHostSSMParameter}"
                - !Sub "arn:aws:ssm:*:*:parameter/${JumpBoxHostSSMParameter}"
                - !Sub "arn:aws:s3:::*"
              
  DevDataProcessorLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c7217cdde317cfec
      InstanceType: t2.medium
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref VMSecurityGroup
      IamInstanceProfile: !Ref CFMInstanceProfile
      UserData:
        Fn::Base64: |
          #!/bin/bash
          exec > /tmp/userdata.log 2>&1  # Redirect all output to a log file for debugging
          export HOME=/root
          export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

          sudo apt update
          NODE_INSTALL_DIR="/usr/local"
          NODE_VERSION="v20.11.1"
          NODE_ARCHIVE="node-${NODE_VERSION}-linux-x64.tar.xz"
          NODE_URL="https://nodejs.org/dist/${NODE_VERSION}/${NODE_ARCHIVE}"
          curl -fsSL "$NODE_URL" -o "/tmp/${NODE_ARCHIVE}"
          sudo mkdir -p "$NODE_INSTALL_DIR"
          sudo tar -xvf "/tmp/${NODE_ARCHIVE}" -C "$NODE_INSTALL_DIR" --strip-components=1
          sudo ln -s "${NODE_INSTALL_DIR}/bin/node" /usr/bin/node
          sudo ln -s "${NODE_INSTALL_DIR}/bin/npm" /usr/bin/npm
          sudo apt update
          sudo apt install -y python3.8
          sudo apt update
          sudo apt install -y ffmpeg
          sudo apt update
          sudo apt install -y nginx
          sudo systemctl start nginx
          sudo npm install -g pm2
          sudo apt update
          sudo apt install -y git
          sudo apt update
          sudo apt install -y mysql-client
          sudo apt update
          sudo apt-get update
          sudo apt-get install -y ruby
          sudo wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
          sudo chmod +x ./install
          sudo ./install auto
          sudo apt install -y awscli 
          aws configure set default.region us-east-1

          export MYSQL_USER=$(aws ssm get-parameter --name mysql-user --query "Parameter.Value" --output text)
          export MYSQL_PASSWORD=$(aws ssm get-parameter --name mysql-password --with-decryption --query "Parameter.Value" --output text)
          export MYSQL_DATABASE=$(aws ssm get-parameter --name mysql-db --query "Parameter.Value" --output text)
          export MYSQL_HOST=$(aws ssm get-parameter --name mysql-host --query "Parameter.Value" --output text)
          export JUMP_BOX=$(aws ssm get-parameter --name jumpbox-host --query "Parameter.Value" --output text)

          aws ssm get-parameter --name jump-box-ssh --with-decryption --query "Parameter.Value" --output text > /root/.ssh/jump-box-ssh.pem
          sudo chmod 600 /root/.ssh/jump-box-ssh.pem
          eval $(ssh-agent -s)
          ssh-add /root/.ssh/jump-box-ssh.pem
          sudo ssh -i /root/.ssh/jump-box-ssh.pem -L 3306:${MYSQL_HOST}:3306 -N -f -l ubuntu -o StrictHostKeyChecking=no ${JUMP_BOX}

          sudo mkdir -p /var/www/code/
          sudo chown -R root:root /var/www/code/

  DevDataProcessorLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: DevDataProcessorLoadBalancer
      Subnets: !Ref VMPublicSubnetIds
      SecurityGroups:
        - !Ref VMSecurityGroup
      Scheme: internet-facing
      Type: application
      Tags:
        - Key: Name
          Value: Dev-DataProcessorLoadBalancer

  DevDataProcessorTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: DevDataProcessorTargetGroup
      VpcId: !Ref VMVPCId
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: Dev-DataProcessorTargetGroup
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 0

  DevDataProcessorListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DevDataProcessorTargetGroup
      LoadBalancerArn: !Ref DevDataProcessorLoadBalancer
      Port: 80
      Protocol: HTTP

  DevDataProcessorAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref DevDataProcessorLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      VPCZoneIdentifier: !Ref VMPublicSubnetIds 
      TargetGroupARNs:
        - !Ref DevDataProcessorTargetGroup 
      HealthCheckType: EC2  
      HealthCheckGracePeriod: 0
      Tags:
        - Key: Name
          Value: dev-dataprocessor
          PropagateAtLaunch: true


