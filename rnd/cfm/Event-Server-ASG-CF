AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VPCId:
    Type: String
    Description: "Enter the VPC ID"

  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Enter the list of public subnet IDs"

  GitSecretName:
    Type: String
    Description: "Name of the AWS Secrets Manager secret containing SSH private key"

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTP, and HTTPS"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Allow SSH from anywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allow HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # Allow HTTPS from anywhere

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c7217cdde317cfec  # Replace with a valid AMI ID
      InstanceType: t2.medium
      KeyName: RDP-CFM-Key
      SecurityGroups:
        - !Ref SecurityGroup  # Reference the security group created above
      UserData:
        Fn::Base64: |
          #!/bin/bash

          exec > /tmp/userdata.log 2>&1

          # Set HOME environment variable
          export HOME=/root

          sudo apt-get update
          sudo apt-get install -y nodejs
          sudo apt-get install -y npm
          sudo apt-get update
          sudo apt-get install -y python3.8
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          sudo apt-get update
          sudo apt-get install -y nginx
          sudo systemctl start nginx
          sudo npm install -g pm2
          sudo apt-get update
          sudo apt-get install -y git

          # Retrieve the private key from Secrets Manager
          GIT_PRIVATE_KEY=$(aws secretsmanager get-secret-value --secret-id !Ref GitSecretName --query SecretString --output text)

          sudo mkdir -p /root/.ssh
          sudo chown -R root:root /root/.ssh

          # Save the private key to a file
          sudo echo "$GIT_PRIVATE_KEY" > /root/.ssh/id_rsa
          sudo chmod 600 /root/.ssh/id_rsa

          # Add GitHub to known hosts
          ssh-keyscan github.com >> /root/.ssh/known_hosts

          # Start the SSH agent and add the private key
          eval $(ssh-agent -s)
          ssh-add /root/.ssh/id_rsa

          # Configure Git with the private key and known hosts
          git config --global core.sshCommand "ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no"

          sudo mkdir -p /var/www/code/
          sudo chown -R root:root /var/www/code/

          # Clone the private Git repository
          cd /home/ubuntu
          git clone git@github.com:videomagicllc/videomagic-event-server.git
          cd /home/ubuntu/videomagic-event-server

          sudo -u root npm install
          sudo -u root pm2 start npm -- start
          sudo -u root pm2 save
          sudo -u root pm2 startup

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      VPCZoneIdentifier: !Ref PublicSubnetIds  # Reference the parameter for subnet IDs
      Tags:
        - Key: Name
          Value: event-server
          PropagateAtLaunch: true
