AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VPCId:
    Type: String
    Description: "Enter the VPC ID"

  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "Enter the list of public subnet IDs"

  GitSSMParameterName:
    Type: String
    Description: "Name of the SSM parameter containing the Git SSH private key"
    Default: "/path/to/your/parameter"  # Provide the default value for your SSM parameter

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTP, and HTTPS"
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Allow SSH from anywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allow HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  # Allow HTTPS from anywhere

  EventServerCFMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EventServerCFMRole

  EventServerCFMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: "arn:aws:ssm:*:*:parameter/Event-CFM-ASG"

  EventServerLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c7217cdde317cfec
      InstanceType: t2.medium
      KeyName: CFM-ASG
      SecurityGroups:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref EventServerCFMInstanceProfile
      UserData:
        Fn::Base64: |
          #!/bin/bash
          exec > /tmp/userdata.log 2>&1  # Redirect all output to a log file for debugging

          # Set HOME environment variable
          export HOME=/root
          export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

          # Install NVM
          sudo apt update
          sudo apt install curl -y
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

          source /root/.nvm/nvm.sh

          # Install Node.js and npm with NVM
          nvm install 18.12.1
          nvm alias default 18.12.1
          npm install -g npm@8.19.2

          sudo apt update
          sudo apt install -y python3.8 ffmpeg nginx
          sudo systemctl start nginx

          # Install pm2 globally 
          npm install -g pm2 > /var/log/pm2_install_log 2>&1

          # Check pm2 installation
          if [ -x "$(command -v pm2)" ]; then
          echo "pm2 installed successfully."
          else
          echo "pm2 installation failed. Check /var/log/pm2_install_log for details."
          fi

          # Install and Configure AWS CLI
          sudo apt install -y awscli
          aws configure set default.region us-east-1

          #Fetch and write the SSH private key directly to /root/.ssh/id_rsa
          aws ssm get-parameter --name Event-CFM-ASG --with-decryption --query "Parameter.Value" --output text > /root/.ssh/id_rsa

          sudo chmod 600 /root/.ssh/id_rsa

          # Add GitHub to the list of known hosts
          ssh-keyscan github.com >> /root/.ssh/known_hosts

          # Start SSH agent and add the private key
          eval $(ssh-agent -s)
          ssh-add /root/.ssh/id_rsa

          git config --global core.sshCommand "ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no"

          sudo mkdir -p /var/www/code/
          sudo chown -R root:root /var/www/code/

          # Clone the private GitHub repository
          git clone git@github.com:videomagicllc/videomagic-event-server.git /var/www/code/

          cd /var/www/code
          sudo -u root npm install
          sudo -u root pm2 start npm -- start
          sudo -u root pm2 save
          sudo -u root pm2 startup

  EventServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref EventServerLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 2
      VPCZoneIdentifier: !Ref PublicSubnetIds  # Reference the parameter for subnet IDs
      Tags:
        - Key: Name
          Value: event-server
          PropagateAtLaunch: true
